{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "1hdemo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "tweets",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "user_id",
						"type": "String"
					},
					{
						"name": "status_id",
						"type": "String"
					},
					{
						"name": "created_at",
						"type": "String"
					},
					{
						"name": "screen_name",
						"type": "String"
					},
					{
						"name": "text",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "display_text_width",
						"type": "String"
					},
					{
						"name": "reply_to_status_id",
						"type": "String"
					},
					{
						"name": "reply_to_user_id",
						"type": "String"
					},
					{
						"name": "reply_to_screen_name",
						"type": "String"
					},
					{
						"name": "is_quote",
						"type": "String"
					},
					{
						"name": "is_retweet",
						"type": "String"
					},
					{
						"name": "favorite_count",
						"type": "String"
					},
					{
						"name": "retweet_count",
						"type": "String"
					},
					{
						"name": "hashtags",
						"type": "String"
					},
					{
						"name": "symbols",
						"type": "String"
					},
					{
						"name": "urls_url",
						"type": "String"
					},
					{
						"name": "urls_t.co",
						"type": "String"
					},
					{
						"name": "urls_expanded_url",
						"type": "String"
					},
					{
						"name": "media_url",
						"type": "String"
					},
					{
						"name": "media_t.co",
						"type": "String"
					},
					{
						"name": "media_expanded_url",
						"type": "String"
					},
					{
						"name": "media_type",
						"type": "String"
					},
					{
						"name": "ext_media_url",
						"type": "String"
					},
					{
						"name": "ext_media_t.co",
						"type": "String"
					},
					{
						"name": "ext_media_expanded_url",
						"type": "String"
					},
					{
						"name": "ext_media_type",
						"type": "String"
					},
					{
						"name": "mentions_user_id",
						"type": "String"
					},
					{
						"name": "mentions_screen_name",
						"type": "String"
					},
					{
						"name": "lang",
						"type": "String"
					},
					{
						"name": "quoted_status_id",
						"type": "String"
					},
					{
						"name": "quoted_text",
						"type": "String"
					},
					{
						"name": "quoted_created_at",
						"type": "String"
					},
					{
						"name": "quoted_source",
						"type": "String"
					},
					{
						"name": "quoted_favorite_count",
						"type": "String"
					},
					{
						"name": "quoted_retweet_count",
						"type": "String"
					},
					{
						"name": "quoted_user_id",
						"type": "String"
					},
					{
						"name": "quoted_screen_name",
						"type": "String"
					},
					{
						"name": "quoted_name",
						"type": "String"
					},
					{
						"name": "quoted_followers_count",
						"type": "String"
					},
					{
						"name": "quoted_friends_count",
						"type": "String"
					},
					{
						"name": "quoted_statuses_count",
						"type": "String"
					},
					{
						"name": "quoted_location",
						"type": "String"
					},
					{
						"name": "quoted_description",
						"type": "String"
					},
					{
						"name": "quoted_verified",
						"type": "String"
					},
					{
						"name": "retweet_status_id",
						"type": "String"
					},
					{
						"name": "retweet_text",
						"type": "String"
					},
					{
						"name": "retweet_created_at",
						"type": "String"
					},
					{
						"name": "retweet_source",
						"type": "String"
					},
					{
						"name": "retweet_favorite_count",
						"type": "String"
					},
					{
						"name": "retweet_retweet_count",
						"type": "String"
					},
					{
						"name": "retweet_user_id",
						"type": "String"
					},
					{
						"name": "retweet_screen_name",
						"type": "String"
					},
					{
						"name": "retweet_name",
						"type": "String"
					},
					{
						"name": "retweet_followers_count",
						"type": "String"
					},
					{
						"name": "retweet_friends_count",
						"type": "String"
					},
					{
						"name": "retweet_statuses_count",
						"type": "String"
					},
					{
						"name": "retweet_location",
						"type": "String"
					},
					{
						"name": "retweet_description",
						"type": "String"
					},
					{
						"name": "retweet_verified",
						"type": "String"
					},
					{
						"name": "place_url",
						"type": "String"
					},
					{
						"name": "place_name",
						"type": "String"
					},
					{
						"name": "place_full_name",
						"type": "String"
					},
					{
						"name": "place_type",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "geo_coords",
						"type": "String"
					},
					{
						"name": "coords_coords",
						"type": "String"
					},
					{
						"name": "bbox_coords",
						"type": "String"
					},
					{
						"name": "status_url",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "protected",
						"type": "String"
					},
					{
						"name": "followers_count",
						"type": "String"
					},
					{
						"name": "friends_count",
						"type": "String"
					},
					{
						"name": "listed_count",
						"type": "String"
					},
					{
						"name": "statuses_count",
						"type": "String"
					},
					{
						"name": "favourites_count",
						"type": "String"
					},
					{
						"name": "account_created_at",
						"type": "String"
					},
					{
						"name": "verified",
						"type": "String"
					},
					{
						"name": "profile_url",
						"type": "String"
					},
					{
						"name": "profile_expanded_url",
						"type": "String"
					},
					{
						"name": "account_lang",
						"type": "String"
					},
					{
						"name": "profile_banner_url",
						"type": "String"
					},
					{
						"name": "profile_background_url",
						"type": "String"
					},
					{
						"name": "profile_image_url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/tweets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeTweetStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "2019-04-27-10-16.parquet",
						"folderPath": "raw",
						"fileSystem": "demofiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeTweetStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_8tb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeTweetStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "RAW",
						"fileSystem": "demojan2020"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeTweetStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeTweetStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw",
						"fileSystem": "demofiles"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeTweetStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_8tb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "2019-04-27-08-35.csv"
					},
					"compression": {
						"type": "GZip"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/babs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeTweetStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "201508_station_data.csv",
						"folderPath": "babs/data",
						"fileSystem": "demofiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "station_id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "long",
						"type": "String"
					},
					{
						"name": "dockcount",
						"type": "String"
					},
					{
						"name": "landmark",
						"type": "String"
					},
					{
						"name": "installation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeTweetStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/babsWeather')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeTweetStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "201508_weather_data.csv",
						"folderPath": "babs/data",
						"fileSystem": "demofiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PDT",
						"type": "String"
					},
					{
						"name": "Max TemperatureF",
						"type": "String"
					},
					{
						"name": "Mean TemperatureF",
						"type": "String"
					},
					{
						"name": "Min TemperatureF",
						"type": "String"
					},
					{
						"name": "Max Dew PointF",
						"type": "String"
					},
					{
						"name": "MeanDew PointF",
						"type": "String"
					},
					{
						"name": "Min DewpointF",
						"type": "String"
					},
					{
						"name": "Max Humidity",
						"type": "String"
					},
					{
						"name": " Mean Humidity",
						"type": "String"
					},
					{
						"name": " Min Humidity",
						"type": "String"
					},
					{
						"name": " Max Sea Level PressureIn",
						"type": "String"
					},
					{
						"name": " Mean Sea Level PressureIn",
						"type": "String"
					},
					{
						"name": " Min Sea Level PressureIn",
						"type": "String"
					},
					{
						"name": " Max VisibilityMiles",
						"type": "String"
					},
					{
						"name": " Mean VisibilityMiles",
						"type": "String"
					},
					{
						"name": " Min VisibilityMiles",
						"type": "String"
					},
					{
						"name": " Max Wind SpeedMPH",
						"type": "String"
					},
					{
						"name": " Mean Wind SpeedMPH",
						"type": "String"
					},
					{
						"name": " Max Gust SpeedMPH",
						"type": "String"
					},
					{
						"name": "PrecipitationIn",
						"type": "String"
					},
					{
						"name": " CloudCover",
						"type": "String"
					},
					{
						"name": " Events",
						"type": "String"
					},
					{
						"name": " WindDirDegrees",
						"type": "String"
					},
					{
						"name": "Zip",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeTweetStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeTweetStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "https://njdatalakeg2.dfs.core.windows.net",
					"accountKey": {
						"type": "SecureString",
						"value": "**********"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "https://njdemokeys.vault.azure.net/"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "C:\\Users\\Nico\\OneDrive - U2U Training\\Talks\\2019\\Azure Bootcamp\\FetchTweets",
					"userId": "Nico@u2u.be",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "nicokey"
					}
				},
				"connectVia": {
					"referenceName": "SAMIRb",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServersqlsattest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "C:\\Users\\Nico\\OneDrive - U2U Training\\Talks\\2019\\Azure Bootcamp\\FetchTweets",
					"userId": "Nico@u2u.be",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "nicokey"
					}
				},
				"connectVia": {
					"referenceName": "SAMIRb",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tweets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "C:\\Users\\Nico\\OneDrive - U2U Training\\Talks\\2019\\Azure Bootcamp\\FetchTweets",
					"userId": "Nico@u2u.be",
					"password": {
						"type": "SecureString",
						"value": "**********"
					}
				},
				"connectVia": {
					"referenceName": "SAMIRb",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_8tb')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2020-03-07T13:55:00.000Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/babsWranglingDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "babs",
							"script": "",
							"dataset": {
								"referenceName": "babs",
								"type": "DatasetReference"
							}
						}
					],
					"sinks": [
						{
							"name": "Sink1",
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"script": "sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink1"
						}
					],
					"script": "section Section1;\r\nshared babs = let\r\n  AdfDoc = AzureStorage.DataLakeContents(\"https://njdatalakeg2.dfs.core.windows.net/demofiles/babs/data/201508_station_data.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = babs,\r\n  #\"Changed column type\" = Table.TransformColumnTypes(Source, {{\"dockcount\", Int64.Type}}),\r\n  #\"Removed other columns\" = Table.SelectColumns(#\"Changed column type\", {\"name\", \"station_id\", \"dockcount\", \"landmark\"}),\r\n  #\"Uppercased text\" = Table.TransformColumns(#\"Removed other columns\", {{\"name\", each Text.Upper(_), type text}}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Uppercased text\", each [dockcount] >= 20)\r\nin\r\n  #\"Filtered rows\";\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/babs')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/from gz to parquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_7ol",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "demofiles/clean/babs/data/201508_status_data.csv.gz"
							},
							{
								"name": "Destination",
								"value": "demofiles/clean/babs/data/statusdata.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "station_id",
											"type": "Int32"
										},
										"sink": {
											"name": "station_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bikes_available",
											"type": "Int32"
										},
										"sink": {
											"name": "bikes_available",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "docks_available",
											"type": "Int32"
										},
										"sink": {
											"name": "docks_available",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "time",
											"type": "DateTime"
										},
										"sink": {
											"name": "time",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "babsstatusgz",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "babsstatusParquet",
								"type": "DatasetReference"
							}
						]
					}
				],
				"concurrency": 1,
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/babsstatusgz')]",
				"[concat(variables('factoryId'), '/datasets/babsstatusParquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "https://njdatalakeg2.dfs.core.windows.net",
					"accountKey": {
						"type": "SecureString",
						"value": "**********"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/babsstatusgz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "201508_status_data.csv.gz",
						"folderPath": "clean/babs/data",
						"fileSystem": "demofiles"
					},
					"columnDelimiter": ",",
					"compressionCodec": "gzip",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "station_id",
						"type": "String"
					},
					{
						"name": "bikes_available",
						"type": "String"
					},
					{
						"name": "docks_available",
						"type": "String"
					},
					{
						"name": "time",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/babsstatusParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean/babs/data",
						"fileSystem": "demofiles"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		}
	]
}