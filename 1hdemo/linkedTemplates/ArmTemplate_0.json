{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "1hdemo"
		},
		"ASD_west_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ASD_west'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeTweetStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeTweetStorage'"
		},
		"WASB_labfiles_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'WASB_labfiles'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"tweets_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'tweets'"
		},
		"AzureDataLakeTweetStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://njdatalakeg2.dfs.core.windows.net"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://njdemokeys.vault.azure.net/"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://njdatalakeg2.dfs.core.windows.net"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\Nico\\OneDrive - U2U Training\\Talks\\2019\\Azure Bootcamp\\FetchTweets"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "Nico@u2u.be"
		},
		"FileServersqlsattest_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\Nico\\OneDrive - U2U Training\\Talks\\2019\\Azure Bootcamp\\FetchTweets"
		},
		"FileServersqlsattest_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "Nico@u2u.be"
		},
		"tweets_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\Nico\\OneDrive - U2U Training\\Talks\\2019\\Azure Bootcamp\\FetchTweets"
		},
		"tweets_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "Nico@u2u.be"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ASD_west')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ASD_west_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeTweetStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeTweetStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeTweetStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WASB_labfiles')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "babs, taxi and other data sets",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('WASB_labfiles_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_8tb')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2020-03-07T13:55:00.000Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAMIRb')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "demo IR",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeTweetStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "2019-04-27-10-16.parquet",
						"folderPath": "raw",
						"fileSystem": "demofiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeTweetStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_1xo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ASD_west",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "user_id",
						"type": "bigint",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "status_id",
						"type": "bigint",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "datetime2",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "screen_name",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "text",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "source",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "display_text_width",
						"type": "smallint",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "is_quote",
						"type": "bit",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "is_retweet",
						"type": "bit",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "favorite_count",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "retweet_count",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "lang",
						"type": "nvarchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "tweets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ASD_west')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_8tb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeTweetStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "RAW",
						"fileSystem": "demojan2020"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeTweetStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeTweetStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw",
						"fileSystem": "demofiles"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeTweetStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_1xo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WASB_labfiles",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2019/12/05",
						"container": "tweets"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WASB_labfiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/babs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeTweetStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "201508_station_data.csv",
						"folderPath": "babs/data",
						"fileSystem": "demofiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "station_id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "long",
						"type": "String"
					},
					{
						"name": "dockcount",
						"type": "String"
					},
					{
						"name": "landmark",
						"type": "String"
					},
					{
						"name": "installation",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeTweetStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/babsWeather')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeTweetStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "201508_weather_data.csv",
						"folderPath": "babs/data",
						"fileSystem": "demofiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PDT",
						"type": "String"
					},
					{
						"name": "Max TemperatureF",
						"type": "String"
					},
					{
						"name": "Mean TemperatureF",
						"type": "String"
					},
					{
						"name": "Min TemperatureF",
						"type": "String"
					},
					{
						"name": "Max Dew PointF",
						"type": "String"
					},
					{
						"name": "MeanDew PointF",
						"type": "String"
					},
					{
						"name": "Min DewpointF",
						"type": "String"
					},
					{
						"name": "Max Humidity",
						"type": "String"
					},
					{
						"name": " Mean Humidity",
						"type": "String"
					},
					{
						"name": " Min Humidity",
						"type": "String"
					},
					{
						"name": " Max Sea Level PressureIn",
						"type": "String"
					},
					{
						"name": " Mean Sea Level PressureIn",
						"type": "String"
					},
					{
						"name": " Min Sea Level PressureIn",
						"type": "String"
					},
					{
						"name": " Max VisibilityMiles",
						"type": "String"
					},
					{
						"name": " Mean VisibilityMiles",
						"type": "String"
					},
					{
						"name": " Min VisibilityMiles",
						"type": "String"
					},
					{
						"name": " Max Wind SpeedMPH",
						"type": "String"
					},
					{
						"name": " Mean Wind SpeedMPH",
						"type": "String"
					},
					{
						"name": " Max Gust SpeedMPH",
						"type": "String"
					},
					{
						"name": "PrecipitationIn",
						"type": "String"
					},
					{
						"name": " CloudCover",
						"type": "String"
					},
					{
						"name": " Events",
						"type": "String"
					},
					{
						"name": " WindDirDegrees",
						"type": "String"
					},
					{
						"name": "Zip",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeTweetStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "nicokey"
					}
				},
				"connectVia": {
					"referenceName": "SAMIRb",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAMIRb')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServersqlsattest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServersqlsattest_properties_typeProperties_host')]",
					"userId": "[parameters('FileServersqlsattest_properties_typeProperties_userId')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "nicokey"
					}
				},
				"connectVia": {
					"referenceName": "SAMIRb",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAMIRb')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tweets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('tweets_properties_typeProperties_host')]",
					"userId": "[parameters('tweets_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('tweets_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SAMIRb",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SAMIRb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/babsstatusgz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "201508_status_data.csv.gz",
						"folderPath": "clean/babs/data",
						"fileSystem": "demofiles"
					},
					"columnDelimiter": ",",
					"compressionCodec": "gzip",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "station_id",
						"type": "String"
					},
					{
						"name": "bikes_available",
						"type": "String"
					},
					{
						"name": "docks_available",
						"type": "String"
					},
					{
						"name": "time",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/babsstatusParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "clean/babs/data",
						"fileSystem": "demofiles"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		}
	]
}